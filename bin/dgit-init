#!/bin/env bash

#
# initialize a git repo with a corresponding separate working tree
# to be pushed to an empty git repo on a remote server
#
Syntax()
{
  echo "\
dgit-init: initialize a git repo with a corresponding separate working tree
           to be pushed to an empty git repo on a remote server
Syntax:
  dgit --git-dir <git-directory> --work-tree <work-tree> init
Where:
  <options may be one of:>
  -h|--help:      this help
  -g|--git-dir:   git directory
  -w|--work-tree: working tree directory
" >&2
  exit 4
}

# read the options
TEMP=`getopt -n dgit-init -o hg:w: --long help,git-dir:,work-tree: -- "$@"`
eval set -- "$TEMP"

gitdir=''
worktree=''
while true; do
  case "$1" in
    -g|--git-dir)
      gitdir=$2
      shift 2
      ;;
    -w|--work-tree)
      worktree=$2
      shift 2
      ;;
    -h|--help)
      shift
      ;;
    --) 
      shift
      break
      ;;
    *) 
      echo "Internal Error!"
      exit 8
      ;;
  esac
done

if [ -z "${gitdir}" ] || [ -z "${worktree}" ]; then
  Syntax
fi

if [ -d "${gitdir}" ]; then
  echo "${gitdir} will be initialized by dgit-init and should not exist to start" >&2
  exit 8
fi

if ! [ -d "${worktree}" ]; then
  echo "${worktree} directory should exist before running dgit-init" >&2
  exit 8
fi

if ! git --git-dir "${gitdir}" --work-tree "${worktree}" "init" ;then
  exit 8
fi

dataset=''
if [ "${worktree##/dsfs/}" != "${worktree}" ]; then
  # We are dealing with a dataset-mapped directory
  if [ "${worktree##/dsfs/txt/}" = "${worktree}" ]; then
    # Only support for 'txt' so fail
    echo "dgit only supports a work-tree under /dsfs/txt but not other /dsfs directories" >&2
    exit 8
  else
    dataset=$(echo "${worktree##/dsfs/txt/}" | tr '/' '.')
  fi
fi

gitattr="${worktree}/gitattr"
if ! [ -f "${gitattr}" ]; then
  if [ "${dataset}x" != "x" ] ; then
    if ! dtouch -tseq "${dataset}.gitattr" ; then
      echo "Unable to allocate ${dataset} for dgit initialization" >&2
      exit 8
    fi
  fi
  if ! /bin/echo "# Attributes to use for files (EBCDIC CCSID 1047 by default)
text zos-working-tree-encoding=IBM-1047" >"${gitattr}" ; then
    echo "Unable to create attributes file in ${gitattr}. Need write access" >&2
    exit 4
  fi
fi

if ! ln -s "${gitattr}" "${gitdir}/info/attributes" ; then
  echo "Unable to create link to ${gitattr} from ${gitdir}/info/attributes" >&2
  exit 4
fi

if ! cd "${gitdir}" ; then
  echo "Unable to cd into ${gitdir}" >&2
  exit 4
fi
if ! git add gitattr ; then
  echo "Unable to add gitattr to repository" >&2
  exit 4
fi
if ! git commit -m "create initial gitattr file" ; then
  echo "Unable to commit initial gitattr to repository" >&2
  exit 4
fi

default=$(git config --get init.defaultbranch)
if [ "${default}x" = "x" ]; then
  default=main
fi

if ! git branch -M "${default}" ; then
  echo "Unable to create initial branch ${default}"
  exit 4
fi

gitbase=$(basename "${gitdir}")

echo "To commit your <files> to an empty repository <repo> on the remote server <server>, issue:
  cd ${gitdir}
  edit info/exclude to specify which directories you do not want to manage with git
  git add <files>
  git commit -m \"<message>\"
  git remote add origin <server>:<repo>
  git branch -M ${default}
  git push -u origin ${default}

If you wanted to add your outstanding files with message 'base' to remote server git@github.com, repository Developer/${gitbase}.git, 
and you wanted to exclude proj23.lst and proj23.obj from git management, issue:
  cd ${gitdir}
  edit info/exclude and add:           
proj23.lst/
proj23.obj/

  git add .
  git commit -m \"base\"
  git remote add origin git@github.com:Developer/${gitbase}.git
  git branch -M ${default}
  git push -u origin ${default}
"
